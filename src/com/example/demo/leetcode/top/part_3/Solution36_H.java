package com.example.demo.leetcode.top.part_3;

// 36 有效数独
/*判断一个9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。
数字1-9在每一行只能出现一次。
数字1-9在每一列只能出现一次。
数字1-9在每一个以粗实线分隔的3x3宫内只能出现一次。
数独部分空格内已填入了数字，空白格用'.'表示。

        输入:                                                    输入:
        [                                                        [
        ["5","3",".",".","7",".",".",".","."],                   ["8","3",".",".","7",".",".",".","."],
        ["6",".",".","1","9","5",".",".","."],                   ["6",".",".","1","9","5",".",".","."],
        [".","9","8",".",".",".",".","6","."],                   [".","9","8",".",".",".",".","6","."],
        ["8",".",".",".","6",".",".",".","3"],                   ["8",".",".",".","6",".",".",".","3"],
        ["4",".",".","8",".","3",".",".","1"],                   ["4",".",".","8",".","3",".",".","1"],
        ["7",".",".",".","2",".",".",".","6"],                   ["7",".",".",".","2",".",".",".","6"],
        [".","6",".",".",".",".","2","8","."],                   [".","6",".",".",".",".","2","8","."],
        [".",".",".","4","1","9",".",".","5"],                   [".",".",".","4","1","9",".",".","5"],
        [".",".",".",".","8",".",".","7","9"]                    [".",".",".",".","8",".",".","7","9"]
        ]                                                        ]
        输出: true                                                输出: false
                                                                  解释: 除了第一行的第一个数字从 5 改为 8 以外，空格内其他数字均与 示例1 相同。
                                                                  但由于位于左上角的 3x3 宫内有两个 8 存在, 因此这个数独是无效的*/

public class Solution36_H {

    public boolean isValidSudoku(char[][] board) {
        // 记录某行，某位数字是否已经被摆放
        boolean[][] row = new boolean[9][9];
        // 记录某列，某位数字是否已经被摆放
        boolean[][] col = new boolean[9][9];
        // 记录某 3x3 宫格内，某位数字是否已经被摆放
        boolean[][] block = new boolean[9][9];

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (board[i][j] != '.') {
                    int num = board[i][j] - '1';
                    //
                    int blockIndex = i / 3 * 3 + j / 3;
                    if (row[i][num] || col[j][num] || block[blockIndex][num]) {
                        return false;
                    } else {
                        row[i][num] = true;
                        col[j][num] = true;
                        block[blockIndex][num] = true;
                    }
                }
            }
        }
        return true;
    }

    public static void main(String[] args) {

    }
}
